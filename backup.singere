
#!/bin/bash
# Name: Evan Singer
# Purpose: Backup script based on a supplied config file
# Last Revision Date: 11/30/2023

# Variables:
# BACKUP_NAME: Name of the backup
# BACKUP_TARGET: Filesystem target
# BACKUP_ENTRIES: Array containing backup entries (NAME, DIRECTORY, RECURSIVE, NUM_DAILY, NUM_WEEKLY, NUM_MONTHLY).
# COMPRESSION: Compression program
# E_MAIL
# PASSWORD
# TARGET_TYPE: Type of filesystem
# TARGET_SERVER: DNS name of the target
# TARGET_FS: Filesystem/share/export on the target
# USER

# Read the backup name from the command line argument
BACKUP_NAME=$1

# Path to the configuration file
CONFIG_FILE="/etc/backup.conf"

# Check if the config file exists
if [ ! -f "$CONFIG_FILE" ]; then
  echo "Error: Config file not found: $CONFIG_FILE"
  exit 1
fi

# Read and parse the configuration file
while IFS='=' read -r key value; do
  case "$key" in
    "COMPRESSION"|"E_MAIL"|"BACKUP_TARGET"|"TARGET_TYPE"|"TARGET_SERVER"|"TARGET_FS"|"USER"|"PASSWORD")
      eval "$key=$value"  # Set variables based on the key-value pairs in the config file
      ;;
    *)
      ;;
  esac
done < "$CONFIG_FILE"

# Fetch backup entries for the specified backup name
mapfile -t BACKUP_ENTRIES < <(grep -E "^$BACKUP_NAME:" "$CONFIG_FILE" | cut -d: -f2-)

# Check if the backup entry exists
if [ ${#BACKUP_ENTRIES[@]} -eq 0 ]; then
  echo "Error: Backup entry '$BACKUP_NAME' not found."
  # exit 1  # Uncomment this line if you want to exit on error
fi

# Print the parsed configuration values
echo "BACKUP_NAME=$BACKUP_NAME"
echo "COMPRESSION=$COMPRESSION"
echo "E_MAIL=$E_MAIL"
echo "BACKUP_TARGET=$BACKUP_TARGET"
echo "TARGET_TYPE=$TARGET_TYPE"
echo "TARGET_SERVER=$TARGET_SERVER"
echo "TARGET_FS=$TARGET_FS"
echo "USER=$USER"
echo "PASSWORD=$PASSWORD"

# Print each backup entry for the specified backup name
for entry in "${BACKUP_ENTRIES[@]}"; do
  echo "BACKUP_ENTRY=$entry"
done
